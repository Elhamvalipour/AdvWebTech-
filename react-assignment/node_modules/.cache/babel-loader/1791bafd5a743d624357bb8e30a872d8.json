{"ast":null,"code":"var _jsxFileName = \"/Users/carawas/Documents/Programmieren/assignemnet 4/react-assignment/src/components/chartAP.js\";\nimport React, { Component } from \"react\";\nimport Chart from \"chart.js\"; //Small JSX Component exporting a button that changes looks when it's clicked\n\nclass ChartAP extends Component {\n  constructor(...args) {\n    super(...args);\n    this.chartRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n    new Chart(myChartRef, {\n      type: \"line\",\n      data: {\n        //Bring in data\n        labels: [\"Jan\", \"Feb\", \"March\"],\n        datasets: [{\n          label: \"Sales\",\n          data: [86, 67, 91]\n        }]\n      },\n      options: {//Customize chart options\n      }\n    });\n  } //Here is where our HTML-Markup is designed, in this case just our Edit Button\n\n\n  render() {\n    //The value of isEditing is called from the state\n    //Our text is called with this.props;\n    //const{text}= this.props.text;\n    //Here starts our HTML, Javascript is marked with \"{}\" brackets.\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"card shadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      class: \"m-0 font-weight-bold text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"My Assignments Progress\")), React.createElement(\"div\", {\n      class: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"myChart\",\n      ref: this.chartRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      class: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ChartAP;","map":{"version":3,"sources":["/Users/carawas/Documents/Programmieren/assignemnet 4/react-assignment/src/components/chartAP.js"],"names":["React","Component","Chart","ChartAP","chartRef","createRef","componentDidMount","myChartRef","current","getContext","type","data","labels","datasets","label","options","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,UAAlB,C,CAGA;;AACA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAE9BG,QAF8B,GAEnBJ,KAAK,CAACK,SAAN,EAFmB;AAAA;;AAI9BC,EAAAA,iBAAiB,GAAG;AACpB,UAAMC,UAAU,GAAG,KAAKH,QAAL,CAAcI,OAAd,CAAsBC,UAAtB,CAAiC,IAAjC,CAAnB;AAGA,QAAIP,KAAJ,CAAUK,UAAV,EAAsB;AACpBG,MAAAA,IAAI,EAAE,MADc;AAEpBC,MAAAA,IAAI,EAAE;AACF;AACAC,QAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,OAAf,CAFN;AAGFC,QAAAA,QAAQ,EAAE,CACN;AACIC,UAAAA,KAAK,EAAE,OADX;AAEIH,UAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT;AAFV,SADM;AAHR,OAFc;AAYpBI,MAAAA,OAAO,EAAE,CACL;AADK;AAZW,KAAtB;AAgBD,GAxB+B,CA2B5B;;;AACFC,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF;AAAK,MAAA,KAAK,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACD;AAAK,MAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,KAAK,EAAC,mCAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,CADC,EAID;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACY,MAAA,EAAE,EAAC,SADf;AAEY,MAAA,GAAG,EAAE,KAAKZ,QAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJC,CADF,CAFD,CADE,CADE,EAoBL;AAAK,MAAA,KAAK,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CApBK,CADF;AA2BD;;AA5D6B;;AAiEhC,eAAeD,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Chart from \"chart.js\";\n\n\n//Small JSX Component exporting a button that changes looks when it's clicked\nclass ChartAP extends Component {\n  //Constructor for defining start settings in this.state and binding functions\n  chartRef = React.createRef();\n\n  componentDidMount() {\n  const myChartRef = this.chartRef.current.getContext(\"2d\");\n \n  \n  new Chart(myChartRef, {\n    type: \"line\",\n    data: {\n        //Bring in data\n        labels: [\"Jan\", \"Feb\", \"March\"],\n        datasets: [\n            {\n                label: \"Sales\",\n                data: [86, 67, 91],\n            }\n        ]\n    },\n    options: {\n        //Customize chart options\n    }\n});\n}\n\n\n    //Here is where our HTML-Markup is designed, in this case just our Edit Button\n  render() {\n    //The value of isEditing is called from the state\n    //Our text is called with this.props;\n    //const{text}= this.props.text;\n    //Here starts our HTML, Javascript is marked with \"{}\" brackets.\n    return (\n      <div>\n   \t<div class=\"container-fluid\">\n\t\t<div class=\"row\">\n\n\t\t\t<div class=\"col\">\n\t\t\t  <div class=\"card shadow\">\n\t\t\t\t<div class=\"card-header\">\n\t\t\t\t  <h6 class=\"m-0 font-weight-bold text-primary\">My Assignments Progress</h6>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"card-body\">\n        <canvas\n                    id=\"myChart\"\n                    ref={this.chartRef}\n                />\n\t\t\t\t</div>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t\n\t<div class=\"container-fluid\">\n\t\t<div class=\"row\">\n      </div>\n      </div>\n      </div>\n    );\n  }\n}\n\n\n\nexport default ChartAP;"]},"metadata":{},"sourceType":"module"}