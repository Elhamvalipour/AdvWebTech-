{"ast":null,"code":"var _jsxFileName = \"/Users/carawas/Documents/MongoDB Assignment/react-assignment/src/components/chartAP.js\";\nimport React, { Component } from \"react\";\nimport Chart from \"chart.js\"; //Small JSX Component exporting a button that changes looks when it's clicked\n\nclass ChartAP extends Component {\n  constructor(...args) {\n    super(...args);\n    this.chartRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const AP = this.chartRef.current.getContext(\"2d\");\n    new Chart(AP, {\n      type: 'line',\n      data: {\n        labels: [\"Assignment 1\", \"Assignment 2\", \"Assignment 3\", \"Assignment 4\", \"Assignment 5\"],\n        datasets: [{\n          label: \"Points\",\n          lineTension: 0.3,\n          backgroundColor: \"rgba(78, 115, 223, 0.05)\",\n          borderColor: \"rgba(78, 115, 223, 1)\",\n          pointRadius: 3,\n          pointBackgroundColor: \"rgba(78, 115, 223, 1)\",\n          pointBorderColor: \"rgba(78, 115, 223, 1)\",\n          pointHoverRadius: 3,\n          pointHoverBackgroundColor: \"rgba(78, 115, 223, 1)\",\n          pointHoverBorderColor: \"rgba(78, 115, 223, 1)\",\n          pointHitRadius: 10,\n          pointBorderWidth: 2,\n          data: [2.7, 1.0, 2.3, 2.0, 4.0]\n        }]\n      },\n      options: {\n        maintainAspectRatio: false,\n        layout: {\n          padding: {\n            left: 10,\n            right: 25,\n            top: 25,\n            bottom: 0\n          }\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              display: false,\n              drawBorder: false\n            },\n            ticks: {\n              maxTicksLimit: 5\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              maxTicksLimit: 5,\n              padding: 10\n            },\n            gridLines: {\n              color: \"rgb(234, 236, 244)\",\n              zeroLineColor: \"rgb(234, 236, 244)\",\n              drawBorder: false,\n              borderDash: [2],\n              zeroLineBorderDash: [2]\n            }\n          }]\n        },\n        legend: {\n          display: false\n        },\n        tooltips: {\n          backgroundColor: \"rgb(255,255,255)\",\n          bodyFontColor: \"#858796\",\n          titleMarginBottom: 10,\n          titleFontColor: '#6e707e',\n          titleFontSize: 14,\n          borderColor: '#dddfeb',\n          borderWidth: 1,\n          xPadding: 15,\n          yPadding: 15,\n          displayColors: false,\n          intersect: false,\n          mode: 'index',\n          caretPadding: 10,\n          callbacks: {\n            label: function (tooltipItem, chart) {\n              var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';\n              return datasetLabel + ': ' + tooltipItem.yLabel;\n            }\n          }\n        }\n      }\n    });\n  } //Here is where our HTML-Markup is designed, in this case just our Edit Button\n\n\n  render() {\n    //The value of isEditing is called from the state\n    //Our text is called with this.props;\n    //const{text}= this.props.text;\n    //Here starts our HTML, Javascript is marked with \"{}\" brackets.\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"card shadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      class: \"m-0 font-weight-bold text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"My Assignments Progress\")), React.createElement(\"div\", {\n      class: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"Assignment Progress\",\n      ref: this.chartRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      class: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ChartAP;","map":{"version":3,"sources":["/Users/carawas/Documents/MongoDB Assignment/react-assignment/src/components/chartAP.js"],"names":["React","Component","Chart","ChartAP","chartRef","createRef","componentDidMount","AP","current","getContext","type","data","labels","datasets","label","lineTension","backgroundColor","borderColor","pointRadius","pointBackgroundColor","pointBorderColor","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHitRadius","pointBorderWidth","options","maintainAspectRatio","layout","padding","left","right","top","bottom","scales","xAxes","gridLines","display","drawBorder","ticks","maxTicksLimit","yAxes","color","zeroLineColor","borderDash","zeroLineBorderDash","legend","tooltips","bodyFontColor","titleMarginBottom","titleFontColor","titleFontSize","borderWidth","xPadding","yPadding","displayColors","intersect","mode","caretPadding","callbacks","tooltipItem","chart","datasetLabel","datasetIndex","yLabel","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,UAAlB,C,CAGA;;AACA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAE9BG,QAF8B,GAEnBJ,KAAK,CAACK,SAAN,EAFmB;AAAA;;AAI9BC,EAAAA,iBAAiB,GAAG;AACpB,UAAMC,EAAE,GAAG,KAAKH,QAAL,CAAcI,OAAd,CAAsBC,UAAtB,CAAiC,IAAjC,CAAX;AAGA,QAAIP,KAAJ,CAAUK,EAAV,EAAc;AACZG,MAAAA,IAAI,EAAE,MADM;AAEZC,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAE,CAAC,cAAD,EAAiB,cAAjB,EAAiC,cAAjC,EAAiD,cAAjD,EAAiE,cAAjE,CADJ;AAEJC,QAAAA,QAAQ,EAAE,CAAC;AACTC,UAAAA,KAAK,EAAE,QADE;AAETC,UAAAA,WAAW,EAAE,GAFJ;AAGTC,UAAAA,eAAe,EAAE,0BAHR;AAITC,UAAAA,WAAW,EAAE,uBAJJ;AAKTC,UAAAA,WAAW,EAAE,CALJ;AAMTC,UAAAA,oBAAoB,EAAE,uBANb;AAOTC,UAAAA,gBAAgB,EAAE,uBAPT;AAQTC,UAAAA,gBAAgB,EAAE,CART;AASTC,UAAAA,yBAAyB,EAAE,uBATlB;AAUTC,UAAAA,qBAAqB,EAAE,uBAVd;AAWTC,UAAAA,cAAc,EAAE,EAXP;AAYTC,UAAAA,gBAAgB,EAAE,CAZT;AAaTd,UAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB;AAbG,SAAD;AAFN,OAFM;AAoBZe,MAAAA,OAAO,EAAE;AACPC,QAAAA,mBAAmB,EAAE,KADd;AAEPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,OAAO,EAAE;AACPC,YAAAA,IAAI,EAAE,EADC;AAEPC,YAAAA,KAAK,EAAE,EAFA;AAGPC,YAAAA,GAAG,EAAE,EAHE;AAIPC,YAAAA,MAAM,EAAE;AAJD;AADH,SAFD;AAUPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,CAAC;AACNC,YAAAA,SAAS,EAAE;AACTC,cAAAA,OAAO,EAAE,KADA;AAETC,cAAAA,UAAU,EAAE;AAFH,aADL;AAKNC,YAAAA,KAAK,EAAE;AACLC,cAAAA,aAAa,EAAE;AADV;AALD,WAAD,CADD;AAUNC,UAAAA,KAAK,EAAE,CAAC;AACNF,YAAAA,KAAK,EAAE;AACLC,cAAAA,aAAa,EAAE,CADV;AAELX,cAAAA,OAAO,EAAE;AAFJ,aADD;AAKNO,YAAAA,SAAS,EAAE;AACTM,cAAAA,KAAK,EAAE,oBADE;AAETC,cAAAA,aAAa,EAAE,oBAFN;AAGTL,cAAAA,UAAU,EAAE,KAHH;AAITM,cAAAA,UAAU,EAAE,CAAC,CAAD,CAJH;AAKTC,cAAAA,kBAAkB,EAAE,CAAC,CAAD;AALX;AALL,WAAD;AAVD,SAVD;AAkCPC,QAAAA,MAAM,EAAE;AACNT,UAAAA,OAAO,EAAE;AADH,SAlCD;AAqCPU,QAAAA,QAAQ,EAAE;AACR/B,UAAAA,eAAe,EAAE,kBADT;AAERgC,UAAAA,aAAa,EAAE,SAFP;AAGRC,UAAAA,iBAAiB,EAAE,EAHX;AAIRC,UAAAA,cAAc,EAAE,SAJR;AAKRC,UAAAA,aAAa,EAAE,EALP;AAMRlC,UAAAA,WAAW,EAAE,SANL;AAORmC,UAAAA,WAAW,EAAE,CAPL;AAQRC,UAAAA,QAAQ,EAAE,EARF;AASRC,UAAAA,QAAQ,EAAE,EATF;AAURC,UAAAA,aAAa,EAAE,KAVP;AAWRC,UAAAA,SAAS,EAAE,KAXH;AAYRC,UAAAA,IAAI,EAAE,OAZE;AAaRC,UAAAA,YAAY,EAAE,EAbN;AAcRC,UAAAA,SAAS,EAAE;AACT7C,YAAAA,KAAK,EAAE,UAAS8C,WAAT,EAAsBC,KAAtB,EAA6B;AAClC,kBAAIC,YAAY,GAAGD,KAAK,CAAChD,QAAN,CAAe+C,WAAW,CAACG,YAA3B,EAAyCjD,KAAzC,IAAkD,EAArE;AACA,qBAAOgD,YAAY,GAAG,IAAf,GAAsBF,WAAW,CAACI,MAAzC;AACD;AAJQ;AAdH;AArCH;AApBG,KAAd;AAgFD,GAxF+B,CA2F5B;;;AACFC,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF;AAAK,MAAA,KAAK,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACD;AAAK,MAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,KAAK,EAAC,mCAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,CADC,EAID;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACY,MAAA,EAAE,EAAC,qBADf;AAEY,MAAA,GAAG,EAAE,KAAK7D,QAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJC,CADF,CAFD,CADE,CADE,EAoBL;AAAK,MAAA,KAAK,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CApBK,CADF;AA2BD;;AA5H6B;;AAiIhC,eAAeD,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Chart from \"chart.js\";\n\n\n//Small JSX Component exporting a button that changes looks when it's clicked\nclass ChartAP extends Component {\n  //Constructor for defining start settings in this.state and binding functions\n  chartRef = React.createRef();\n\n  componentDidMount() {\n  const AP = this.chartRef.current.getContext(\"2d\");\n \n  \n  new Chart(AP, {\n    type: 'line',\n    data: {\n      labels: [\"Assignment 1\", \"Assignment 2\", \"Assignment 3\", \"Assignment 4\", \"Assignment 5\"],\n      datasets: [{\n        label: \"Points\",\n        lineTension: 0.3,\n        backgroundColor: \"rgba(78, 115, 223, 0.05)\",\n        borderColor: \"rgba(78, 115, 223, 1)\",\n        pointRadius: 3,\n        pointBackgroundColor: \"rgba(78, 115, 223, 1)\",\n        pointBorderColor: \"rgba(78, 115, 223, 1)\",\n        pointHoverRadius: 3,\n        pointHoverBackgroundColor: \"rgba(78, 115, 223, 1)\",\n        pointHoverBorderColor: \"rgba(78, 115, 223, 1)\",\n        pointHitRadius: 10,\n        pointBorderWidth: 2,\n        data: [2.7, 1.0, 2.3, 2.0, 4.0],\n      }],\n    },\n    options: {\n      maintainAspectRatio: false,\n      layout: {\n        padding: {\n          left: 10,\n          right: 25,\n          top: 25,\n          bottom: 0\n        }\n      },\n      scales: {\n        xAxes: [{\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            maxTicksLimit: 5\n          }\n        }],\n        yAxes: [{\n          ticks: {\n            maxTicksLimit: 5,\n            padding: 10\n          },\n          gridLines: {\n            color: \"rgb(234, 236, 244)\",\n            zeroLineColor: \"rgb(234, 236, 244)\",\n            drawBorder: false,\n            borderDash: [2],\n            zeroLineBorderDash: [2]\n          }\n        }],\n      },\n      legend: {\n        display: false\n      },\n      tooltips: {\n        backgroundColor: \"rgb(255,255,255)\",\n        bodyFontColor: \"#858796\",\n        titleMarginBottom: 10,\n        titleFontColor: '#6e707e',\n        titleFontSize: 14,\n        borderColor: '#dddfeb',\n        borderWidth: 1,\n        xPadding: 15,\n        yPadding: 15,\n        displayColors: false,\n        intersect: false,\n        mode: 'index',\n        caretPadding: 10,\n        callbacks: {\n          label: function(tooltipItem, chart) {\n            var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';\n            return datasetLabel + ': ' + tooltipItem.yLabel;\n          }\n        }\n      }\n    }\n});\n}\n\n\n    //Here is where our HTML-Markup is designed, in this case just our Edit Button\n  render() {\n    //The value of isEditing is called from the state\n    //Our text is called with this.props;\n    //const{text}= this.props.text;\n    //Here starts our HTML, Javascript is marked with \"{}\" brackets.\n    return (\n      <div>\n   \t<div class=\"container-fluid\">\n\t\t<div class=\"row\">\n\n\t\t\t<div class=\"col\">\n\t\t\t  <div class=\"card shadow\">\n\t\t\t\t<div class=\"card-header\">\n\t\t\t\t  <h6 class=\"m-0 font-weight-bold text-primary\">My Assignments Progress</h6>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"card-body\">\n        <canvas\n                    id=\"Assignment Progress\"\n                    ref={this.chartRef}\n                />\n\t\t\t\t</div>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t\n\t<div class=\"container-fluid\">\n\t\t<div class=\"row\">\n      </div>\n      </div>\n      </div>\n    );\n  }\n}\n\n\n\nexport default ChartAP;"]},"metadata":{},"sourceType":"module"}