{"ast":null,"code":"var _jsxFileName = \"/Users/carawas/Documents/MongoDB Assignment/react-assignment/src/components/userModal.js\";\nimport React, { Component } from \"react\";\nimport { Form, Button } from \"react-bootstrap\"; //Small JSX Component exporting a button that changes looks when it's clicked\n\nclass UserModal extends Component {\n  //Constructor for defining start settings in this.state and binding functions\n  constructor(props) {\n    //properties given to us by other components are connected with \"props\"\n    super(props); //You need to bind a function in the constructor to call it throughout the class\n\n    this.onSave = event => {\n      event.preventDefault();\n      const data = new FormData(event.target); //New State is set\n\n      this.setState(() => ({\n        name: data[0],\n        age: data[1],\n        gender: data[2],\n        studyGroup: data[3]\n      }));\n    };\n\n    this.onSave = this.onSave.bind(this); //This is were our start settings are defined:\n    //We want our Edit button to show \"off\"/false\n\n    this.state = {\n      name: \"xxx\",\n      age: 100,\n      gender: \"d\",\n      studyGroup: \"NEC\"\n    };\n  }\n\n  //Here is where our HTML-Markup is designed, in this case just our Edit Button\n  render() {\n    //The value of isEditing is called from the state\n    const isEditing = this.state.isEditing; //Our text is called with this.props;\n    //const{text}= this.props.text;\n    //Here starts our HTML, Javascript is marked with \"{}\" brackets.\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Enter email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"We'll never share your email with anyone else.\")), React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasicChecbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      type: \"checkbox\",\n      label: \"Check me out\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      onClick: this.onSave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Submit\")), \";\", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Recipe\"));\n  }\n\n}\n\nexport default UserModal;","map":{"version":3,"sources":["/Users/carawas/Documents/MongoDB Assignment/react-assignment/src/components/userModal.js"],"names":["React","Component","Form","Button","UserModal","constructor","props","onSave","event","preventDefault","data","FormData","target","setState","name","age","gender","studyGroup","bind","state","render","isEditing"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACIC,IADJ,EAEIC,MAFJ,QAGU,iBAHV,C,CAIA;;AACA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAChC;AAEAI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;AACA,UAAMA,KAAN,EAFiB,CAGjB;;AAHiB,SAiBnBC,MAjBmB,GAiBXC,KAAK,IAAI;AACfA,MAAAA,KAAK,CAACC,cAAN;AAEA,YAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAaH,KAAK,CAACI,MAAnB,CAAb,CAHe,CAKf;;AACA,WAAKC,QAAL,CAAe,OAAO;AAClBC,QAAAA,IAAI,EAAEJ,IAAI,CAAC,CAAD,CADQ;AAElBK,QAAAA,GAAG,EAAEL,IAAI,CAAC,CAAD,CAFS;AAGlBM,QAAAA,MAAM,EAACN,IAAI,CAAC,CAAD,CAHO;AAIlBO,QAAAA,UAAU,EAAEP,IAAI,CAAC,CAAD;AAJE,OAAP,CAAf;AAMD,KA7BkB;;AAIjB,SAAKH,MAAL,GAAc,KAAKA,MAAL,CAAYW,IAAZ,CAAiB,IAAjB,CAAd,CAJiB,CAMjB;AACA;;AACA,SAAKC,KAAL,GAAa;AACXL,MAAAA,IAAI,EAAE,KADK;AAEXC,MAAAA,GAAG,EAAE,GAFM;AAGXC,MAAAA,MAAM,EAAE,GAHG;AAIXC,MAAAA,UAAU,EAAE;AAJD,KAAb;AAOD;;AAeC;AACFG,EAAAA,MAAM,GAAG;AACP;AADO,UAECC,SAFD,GAEe,KAAKF,KAFpB,CAECE,SAFD,EAIP;AACA;AACA;;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACR,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,OAAnB;AAA2B,MAAA,WAAW,EAAC,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAHF,CADQ,EASR,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,UAAnB;AAA8B,MAAA,WAAW,EAAC,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CATQ,EAaR,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,IAAI,EAAC,UAAjB;AAA4B,MAAA,KAAK,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAbQ,EAgBR,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAwC,MAAA,OAAO,EAAE,KAAKd,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBQ,CAFJ,OAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBF,CADF;AA2BD;;AApE+B;;AAuElC,eAAeH,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    Form,\n    Button\n   } from \"react-bootstrap\";\n//Small JSX Component exporting a button that changes looks when it's clicked\nclass UserModal extends Component {\n  //Constructor for defining start settings in this.state and binding functions\n\n  constructor(props) {\n    //properties given to us by other components are connected with \"props\"\n    super(props);\n    //You need to bind a function in the constructor to call it throughout the class\n    this.onSave = this.onSave.bind(this);\n\n    //This is were our start settings are defined:\n    //We want our Edit button to show \"off\"/false\n    this.state = {\n      name: \"xxx\",\n      age: 100,\n      gender: \"d\",\n      studyGroup: \"NEC\",\n   \n    };\n  }\n\n  onSave =event => {\n    event.preventDefault();\n\n    const data = new FormData(event.target);\n \n    //New State is set\n    this.setState( () => ({ \n        name: data[0],\n        age: data[1],\n        gender:data[2], \n        studyGroup: data[3]\n    }) );\n  }\n    //Here is where our HTML-Markup is designed, in this case just our Edit Button\n  render() {\n    //The value of isEditing is called from the state\n    const { isEditing } = this.state;\n   \n    //Our text is called with this.props;\n    //const{text}= this.props.text;\n    //Here starts our HTML, Javascript is marked with \"{}\" brackets.\n    return (\n      <div>\n\n          <Form>\n  <Form.Group controlId=\"formBasicEmail\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Enter email\" />\n    <Form.Text className=\"text-muted\">\n      We'll never share your email with anyone else.\n    </Form.Text>\n  </Form.Group>\n\n  <Form.Group controlId=\"formBasicPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Password\" />\n  </Form.Group>\n  <Form.Group controlId=\"formBasicChecbox\">\n    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n  </Form.Group>\n  <Button variant=\"primary\" type=\"submit\" onClick={this.onSave}>\n    Submit\n  </Button>\n</Form>;\n\n        <p>Recipe</p>\n      </div>\n    );\n  }\n}\n\nexport default UserModal;"]},"metadata":{},"sourceType":"module"}