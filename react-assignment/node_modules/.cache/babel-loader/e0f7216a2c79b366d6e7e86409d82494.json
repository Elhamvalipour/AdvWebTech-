{"ast":null,"code":"var _jsxFileName = \"/Users/carawas/Documents/Programmieren/assignemnet 4/react-assignment/src/components/chartAP.js\";\nimport React, { Component } from \"react\";\nimport { Navbar, NavbarBrand, Nav, NavItem, NavLink, Button } from \"react-bootstrap\"; //Small JSX Component exporting a button that changes looks when it's clicked\n\nclass ChartAP extends Component {\n  //Constructor for defining start settings in this.state and binding functions\n  constructor(props) {\n    //properties given to us by other components are connected with \"props\"\n    super(props); //You need to bind a function in the constructor to call it throughout the class\n\n    this.onEdit = this.onEdit.bind(this); //This is were our start settings are defined:\n    //We want our Edit button to show \"off\"/false\n\n    this.state = {\n      isEditing: false\n    };\n  }\n\n  onEdit(ev) {\n    //New State is set\n    this.setState(() => ({\n      isEditing: !this.state.isEditing\n    }));\n  } //Here is where our HTML-Markup is designed, in this case just our Edit Button\n\n\n  render() {\n    //The value of isEditing is called from the state\n    const isEditing = this.state.isEditing; //Our text is called with this.props;\n    //const{text}= this.props.text;\n    //Here starts our HTML, Javascript is marked with \"{}\" brackets.\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"danger\",\n      onClick: this.onEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, isEditing ? \"Done Editing?\" : \"Edit\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Recipe\"));\n  }\n\n}\n\nexport default ChartAP;","map":{"version":3,"sources":["/Users/carawas/Documents/Programmieren/assignemnet 4/react-assignment/src/components/chartAP.js"],"names":["React","Component","Navbar","NavbarBrand","Nav","NavItem","NavLink","Button","ChartAP","constructor","props","onEdit","bind","state","isEditing","ev","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACIC,MADJ,EAEIC,WAFJ,EAGIC,GAHJ,EAIIC,OAJJ,EAKIC,OALJ,EAMIC,MANJ,QAQS,iBART,C,CAWA;;AACA,MAAMC,OAAN,SAAsBP,SAAtB,CAAgC;AAC9B;AAEAQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;AACA,UAAMA,KAAN,EAFiB,CAGjB;;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd,CAJiB,CAMjB;AACA;;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAEDH,EAAAA,MAAM,CAACI,EAAD,EAAK;AACT;AACA,SAAKC,QAAL,CAAe,OAAO;AAAEF,MAAAA,SAAS,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAzB,KAAP,CAAf;AACD,GAnB6B,CAoB5B;;;AACFG,EAAAA,MAAM,GAAG;AACP;AADO,UAECH,SAFD,GAEe,KAAKD,KAFpB,CAECC,SAFD,EAGP;AACA;AACA;;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,QAAhB;AAAyB,MAAA,OAAO,EAAE,KAAKH,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGG,SAAS,GAAG,eAAH,GAAqB,MADjC,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CADF;AAQD;;AAnC6B;;AAsChC,eAAeN,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    Navbar,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    Button\n  \n  } from \"react-bootstrap\";\n\n\n//Small JSX Component exporting a button that changes looks when it's clicked\nclass ChartAP extends Component {\n  //Constructor for defining start settings in this.state and binding functions\n\n  constructor(props) {\n    //properties given to us by other components are connected with \"props\"\n    super(props);\n    //You need to bind a function in the constructor to call it throughout the class\n    this.onEdit = this.onEdit.bind(this);\n\n    //This is were our start settings are defined:\n    //We want our Edit button to show \"off\"/false\n    this.state = {\n      isEditing: false\n    };\n  }\n\n  onEdit(ev) {\n    //New State is set\n    this.setState( () => ({ isEditing: !this.state.isEditing }));\n  }\n    //Here is where our HTML-Markup is designed, in this case just our Edit Button\n  render() {\n    //The value of isEditing is called from the state\n    const { isEditing } = this.state;\n    //Our text is called with this.props;\n    //const{text}= this.props.text;\n    //Here starts our HTML, Javascript is marked with \"{}\" brackets.\n    return (\n      <div>\n        <Button variant=\"danger\" onClick={this.onEdit}>\n          {isEditing ? \"Done Editing?\" : \"Edit\"}\n        </Button>\n        <p>Recipe</p>\n      </div>\n    );\n  }\n}\n\nexport default ChartAP;"]},"metadata":{},"sourceType":"module"}